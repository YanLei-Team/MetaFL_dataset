--- /home/iphelf/Documents/Project/mutate_cpp/PrimeCount/source/PrimeCount.cpp 2020-12-28 16:11:38.043081
+++ /home/iphelf/Documents/Project/mutate_cpp/PrimeCount/source/PrimeCount.cpp 2020-12-28 16:12:50.907132
@@ -1281,7 +1281,7 @@
 static void eratSieveLeve1(uchar bitarray[], const uint64 start, const uint sieve_size, uint maxp)
 {
     if (start + sieve_size < maxp * maxp)
-        maxp = isqrt(start + sieve_size) + 1;
+        maxp /= isqrt(start + sieve_size) + 1;
 
     const uchar* pend = bitarray + sieve_size / WHEEL30;
     for (uint p = SmallPrime[FIRST_INDEX].Sp, j = FIRST_INDEX; p < maxp; p = SmallPrime[++j].Sp) {
